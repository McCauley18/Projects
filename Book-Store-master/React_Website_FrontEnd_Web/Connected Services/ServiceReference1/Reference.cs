//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace React_Website_FrontEnd_Web.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private React_Website_FrontEnd_Web.ServiceReference1.OrderItem[] OrderItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockQuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageURL {
            get {
                return this.ImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURLField, value) != true)) {
                    this.ImageURLField = value;
                    this.RaisePropertyChanged("ImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public React_Website_FrontEnd_Web.ServiceReference1.OrderItem[] OrderItems {
            get {
                return this.OrderItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderItemsField, value) != true)) {
                    this.OrderItemsField = value;
                    this.RaisePropertyChanged("OrderItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StockQuantity {
            get {
                return this.StockQuantityField;
            }
            set {
                if ((this.StockQuantityField.Equals(value) != true)) {
                    this.StockQuantityField = value;
                    this.RaisePropertyChanged("StockQuantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderItem", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class OrderItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private React_Website_FrontEnd_Web.ServiceReference1.Order OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private React_Website_FrontEnd_Web.ServiceReference1.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubtotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public React_Website_FrontEnd_Web.ServiceReference1.Order Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public React_Website_FrontEnd_Web.ServiceReference1.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Subtotal {
            get {
                return this.SubtotalField;
            }
            set {
                if ((this.SubtotalField.Equals(value) != true)) {
                    this.SubtotalField = value;
                    this.RaisePropertyChanged("Subtotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private React_Website_FrontEnd_Web.ServiceReference1.OrderItem[] OrderItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public React_Website_FrontEnd_Web.ServiceReference1.OrderItem[] OrderItems {
            get {
                return this.OrderItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderItemsField, value) != true)) {
                    this.OrderItemsField = value;
                    this.RaisePropertyChanged("OrderItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((this.TotalAmountField.Equals(value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentMethod", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class PaymentMethod : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameOnCardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameOnCard {
            get {
                return this.NameOnCardField;
            }
            set {
                if ((object.ReferenceEquals(this.NameOnCardField, value) != true)) {
                    this.NameOnCardField = value;
                    this.RaisePropertyChanged("NameOnCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((this.PostalCodeField.Equals(value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Town {
            get {
                return this.TownField;
            }
            set {
                if ((object.ReferenceEquals(this.TownField, value) != true)) {
                    this.TownField = value;
                    this.RaisePropertyChanged("Town");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Invoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateDeliveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantitySoldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateDelivered {
            get {
                return this.DateDeliveredField;
            }
            set {
                if ((this.DateDeliveredField.Equals(value) != true)) {
                    this.DateDeliveredField = value;
                    this.RaisePropertyChanged("DateDelivered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((this.TotalAmountField.Equals(value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantitySold {
            get {
                return this.quantitySoldField;
            }
            set {
                if ((this.quantitySoldField.Equals(value) != true)) {
                    this.quantitySoldField = value;
                    this.RaisePropertyChanged("quantitySold");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddProduct", ReplyAction="http://tempuri.org/IService/AddProductResponse")]
        int AddProduct(React_Website_FrontEnd_Web.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddProduct", ReplyAction="http://tempuri.org/IService/AddProductResponse")]
        System.Threading.Tasks.Task<int> AddProductAsync(React_Website_FrontEnd_Web.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductName", ReplyAction="http://tempuri.org/IService/GetProductNameResponse")]
        string GetProductName(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductName", ReplyAction="http://tempuri.org/IService/GetProductNameResponse")]
        System.Threading.Tasks.Task<string> GetProductNameAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/editProduct", ReplyAction="http://tempuri.org/IService/editProductResponse")]
        int editProduct(React_Website_FrontEnd_Web.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/editProduct", ReplyAction="http://tempuri.org/IService/editProductResponse")]
        System.Threading.Tasks.Task<int> editProductAsync(React_Website_FrontEnd_Web.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/productList", ReplyAction="http://tempuri.org/IService/productListResponse")]
        React_Website_FrontEnd_Web.ServiceReference1.Product[] productList(string BookCat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/productList", ReplyAction="http://tempuri.org/IService/productListResponse")]
        System.Threading.Tasks.Task<React_Website_FrontEnd_Web.ServiceReference1.Product[]> productListAsync(string BookCat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveProduct", ReplyAction="http://tempuri.org/IService/RemoveProductResponse")]
        int RemoveProduct(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveProduct", ReplyAction="http://tempuri.org/IService/RemoveProductResponse")]
        System.Threading.Tasks.Task<int> RemoveProductAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveCategory", ReplyAction="http://tempuri.org/IService/RemoveCategoryResponse")]
        int RemoveCategory(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveCategory", ReplyAction="http://tempuri.org/IService/RemoveCategoryResponse")]
        System.Threading.Tasks.Task<int> RemoveCategoryAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddOrder", ReplyAction="http://tempuri.org/IService/AddOrderResponse")]
        int AddOrder(React_Website_FrontEnd_Web.ServiceReference1.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddOrder", ReplyAction="http://tempuri.org/IService/AddOrderResponse")]
        System.Threading.Tasks.Task<int> AddOrderAsync(React_Website_FrontEnd_Web.ServiceReference1.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddPaymentMethod", ReplyAction="http://tempuri.org/IService/AddPaymentMethodResponse")]
        int AddPaymentMethod(React_Website_FrontEnd_Web.ServiceReference1.PaymentMethod method);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddPaymentMethod", ReplyAction="http://tempuri.org/IService/AddPaymentMethodResponse")]
        System.Threading.Tasks.Task<int> AddPaymentMethodAsync(React_Website_FrontEnd_Web.ServiceReference1.PaymentMethod method);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddOrderItem", ReplyAction="http://tempuri.org/IService/AddOrderItemResponse")]
        int AddOrderItem(React_Website_FrontEnd_Web.ServiceReference1.OrderItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddOrderItem", ReplyAction="http://tempuri.org/IService/AddOrderItemResponse")]
        System.Threading.Tasks.Task<int> AddOrderItemAsync(React_Website_FrontEnd_Web.ServiceReference1.OrderItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProduct", ReplyAction="http://tempuri.org/IService/GetProductResponse")]
        React_Website_FrontEnd_Web.ServiceReference1.Product GetProduct(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProduct", ReplyAction="http://tempuri.org/IService/GetProductResponse")]
        System.Threading.Tasks.Task<React_Website_FrontEnd_Web.ServiceReference1.Product> GetProductAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteOrderItem", ReplyAction="http://tempuri.org/IService/DeleteOrderItemResponse")]
        int DeleteOrderItem(string OrderID, string ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteOrderItem", ReplyAction="http://tempuri.org/IService/DeleteOrderItemResponse")]
        System.Threading.Tasks.Task<int> DeleteOrderItemAsync(string OrderID, string ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UserLogin", ReplyAction="http://tempuri.org/IService/UserLoginResponse")]
        bool UserLogin(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UserLogin", ReplyAction="http://tempuri.org/IService/UserLoginResponse")]
        System.Threading.Tasks.Task<bool> UserLoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/userRegister", ReplyAction="http://tempuri.org/IService/userRegisterResponse")]
        int userRegister(React_Website_FrontEnd_Web.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/userRegister", ReplyAction="http://tempuri.org/IService/userRegisterResponse")]
        System.Threading.Tasks.Task<int> userRegisterAsync(React_Website_FrontEnd_Web.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUser", ReplyAction="http://tempuri.org/IService/GetUserResponse")]
        React_Website_FrontEnd_Web.ServiceReference1.User GetUser(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUser", ReplyAction="http://tempuri.org/IService/GetUserResponse")]
        System.Threading.Tasks.Task<React_Website_FrontEnd_Web.ServiceReference1.User> GetUserAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserName", ReplyAction="http://tempuri.org/IService/GetUserNameResponse")]
        React_Website_FrontEnd_Web.ServiceReference1.User GetUserName(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserName", ReplyAction="http://tempuri.org/IService/GetUserNameResponse")]
        System.Threading.Tasks.Task<React_Website_FrontEnd_Web.ServiceReference1.User> GetUserNameAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetInvoice", ReplyAction="http://tempuri.org/IService/GetInvoiceResponse")]
        React_Website_FrontEnd_Web.ServiceReference1.Invoice[] GetInvoice(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetInvoice", ReplyAction="http://tempuri.org/IService/GetInvoiceResponse")]
        System.Threading.Tasks.Task<React_Website_FrontEnd_Web.ServiceReference1.Invoice[]> GetInvoiceAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddInvoice", ReplyAction="http://tempuri.org/IService/AddInvoiceResponse")]
        int AddInvoice(React_Website_FrontEnd_Web.ServiceReference1.Invoice invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddInvoice", ReplyAction="http://tempuri.org/IService/AddInvoiceResponse")]
        System.Threading.Tasks.Task<int> AddInvoiceAsync(React_Website_FrontEnd_Web.ServiceReference1.Invoice invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getProductPrice", ReplyAction="http://tempuri.org/IService/getProductPriceResponse")]
        decimal getProductPrice(int intProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getProductPrice", ReplyAction="http://tempuri.org/IService/getProductPriceResponse")]
        System.Threading.Tasks.Task<decimal> getProductPriceAsync(int intProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getProductUrl", ReplyAction="http://tempuri.org/IService/getProductUrlResponse")]
        string getProductUrl(int intProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getProductUrl", ReplyAction="http://tempuri.org/IService/getProductUrlResponse")]
        System.Threading.Tasks.Task<string> getProductUrlAsync(int intProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getProductQuantinty", ReplyAction="http://tempuri.org/IService/getProductQuantintyResponse")]
        int getProductQuantinty(int intProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getProductQuantinty", ReplyAction="http://tempuri.org/IService/getProductQuantintyResponse")]
        System.Threading.Tasks.Task<int> getProductQuantintyAsync(int intProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getProductDescription", ReplyAction="http://tempuri.org/IService/getProductDescriptionResponse")]
        string getProductDescription(int intProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getProductDescription", ReplyAction="http://tempuri.org/IService/getProductDescriptionResponse")]
        System.Threading.Tasks.Task<string> getProductDescriptionAsync(int intProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getProductCategory", ReplyAction="http://tempuri.org/IService/getProductCategoryResponse")]
        string getProductCategory(int intProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getProductCategory", ReplyAction="http://tempuri.org/IService/getProductCategoryResponse")]
        System.Threading.Tasks.Task<string> getProductCategoryAsync(int intProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getPrice", ReplyAction="http://tempuri.org/IService/getPriceResponse")]
        decimal getPrice(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getPrice", ReplyAction="http://tempuri.org/IService/getPriceResponse")]
        System.Threading.Tasks.Task<decimal> getPriceAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UserRegisterBackup", ReplyAction="http://tempuri.org/IService/UserRegisterBackupResponse")]
        bool UserRegisterBackup(string fname, string lname, string iemail, string ipassword, string iphonenumber, int iusertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UserRegisterBackup", ReplyAction="http://tempuri.org/IService/UserRegisterBackupResponse")]
        System.Threading.Tasks.Task<bool> UserRegisterBackupAsync(string fname, string lname, string iemail, string ipassword, string iphonenumber, int iusertype);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : React_Website_FrontEnd_Web.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<React_Website_FrontEnd_Web.ServiceReference1.IService>, React_Website_FrontEnd_Web.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddProduct(React_Website_FrontEnd_Web.ServiceReference1.Product product) {
            return base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task<int> AddProductAsync(React_Website_FrontEnd_Web.ServiceReference1.Product product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public string GetProductName(int ID) {
            return base.Channel.GetProductName(ID);
        }
        
        public System.Threading.Tasks.Task<string> GetProductNameAsync(int ID) {
            return base.Channel.GetProductNameAsync(ID);
        }
        
        public int editProduct(React_Website_FrontEnd_Web.ServiceReference1.Product product) {
            return base.Channel.editProduct(product);
        }
        
        public System.Threading.Tasks.Task<int> editProductAsync(React_Website_FrontEnd_Web.ServiceReference1.Product product) {
            return base.Channel.editProductAsync(product);
        }
        
        public React_Website_FrontEnd_Web.ServiceReference1.Product[] productList(string BookCat) {
            return base.Channel.productList(BookCat);
        }
        
        public System.Threading.Tasks.Task<React_Website_FrontEnd_Web.ServiceReference1.Product[]> productListAsync(string BookCat) {
            return base.Channel.productListAsync(BookCat);
        }
        
        public int RemoveProduct(string name) {
            return base.Channel.RemoveProduct(name);
        }
        
        public System.Threading.Tasks.Task<int> RemoveProductAsync(string name) {
            return base.Channel.RemoveProductAsync(name);
        }
        
        public int RemoveCategory(string name) {
            return base.Channel.RemoveCategory(name);
        }
        
        public System.Threading.Tasks.Task<int> RemoveCategoryAsync(string name) {
            return base.Channel.RemoveCategoryAsync(name);
        }
        
        public int AddOrder(React_Website_FrontEnd_Web.ServiceReference1.Order order) {
            return base.Channel.AddOrder(order);
        }
        
        public System.Threading.Tasks.Task<int> AddOrderAsync(React_Website_FrontEnd_Web.ServiceReference1.Order order) {
            return base.Channel.AddOrderAsync(order);
        }
        
        public int AddPaymentMethod(React_Website_FrontEnd_Web.ServiceReference1.PaymentMethod method) {
            return base.Channel.AddPaymentMethod(method);
        }
        
        public System.Threading.Tasks.Task<int> AddPaymentMethodAsync(React_Website_FrontEnd_Web.ServiceReference1.PaymentMethod method) {
            return base.Channel.AddPaymentMethodAsync(method);
        }
        
        public int AddOrderItem(React_Website_FrontEnd_Web.ServiceReference1.OrderItem item) {
            return base.Channel.AddOrderItem(item);
        }
        
        public System.Threading.Tasks.Task<int> AddOrderItemAsync(React_Website_FrontEnd_Web.ServiceReference1.OrderItem item) {
            return base.Channel.AddOrderItemAsync(item);
        }
        
        public React_Website_FrontEnd_Web.ServiceReference1.Product GetProduct(string name) {
            return base.Channel.GetProduct(name);
        }
        
        public System.Threading.Tasks.Task<React_Website_FrontEnd_Web.ServiceReference1.Product> GetProductAsync(string name) {
            return base.Channel.GetProductAsync(name);
        }
        
        public int DeleteOrderItem(string OrderID, string ProductID) {
            return base.Channel.DeleteOrderItem(OrderID, ProductID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOrderItemAsync(string OrderID, string ProductID) {
            return base.Channel.DeleteOrderItemAsync(OrderID, ProductID);
        }
        
        public bool UserLogin(string email, string password) {
            return base.Channel.UserLogin(email, password);
        }
        
        public System.Threading.Tasks.Task<bool> UserLoginAsync(string email, string password) {
            return base.Channel.UserLoginAsync(email, password);
        }
        
        public int userRegister(React_Website_FrontEnd_Web.ServiceReference1.User user) {
            return base.Channel.userRegister(user);
        }
        
        public System.Threading.Tasks.Task<int> userRegisterAsync(React_Website_FrontEnd_Web.ServiceReference1.User user) {
            return base.Channel.userRegisterAsync(user);
        }
        
        public React_Website_FrontEnd_Web.ServiceReference1.User GetUser(int ID) {
            return base.Channel.GetUser(ID);
        }
        
        public System.Threading.Tasks.Task<React_Website_FrontEnd_Web.ServiceReference1.User> GetUserAsync(int ID) {
            return base.Channel.GetUserAsync(ID);
        }
        
        public React_Website_FrontEnd_Web.ServiceReference1.User GetUserName(string email) {
            return base.Channel.GetUserName(email);
        }
        
        public System.Threading.Tasks.Task<React_Website_FrontEnd_Web.ServiceReference1.User> GetUserNameAsync(string email) {
            return base.Channel.GetUserNameAsync(email);
        }
        
        public React_Website_FrontEnd_Web.ServiceReference1.Invoice[] GetInvoice(int ID) {
            return base.Channel.GetInvoice(ID);
        }
        
        public System.Threading.Tasks.Task<React_Website_FrontEnd_Web.ServiceReference1.Invoice[]> GetInvoiceAsync(int ID) {
            return base.Channel.GetInvoiceAsync(ID);
        }
        
        public int AddInvoice(React_Website_FrontEnd_Web.ServiceReference1.Invoice invoice) {
            return base.Channel.AddInvoice(invoice);
        }
        
        public System.Threading.Tasks.Task<int> AddInvoiceAsync(React_Website_FrontEnd_Web.ServiceReference1.Invoice invoice) {
            return base.Channel.AddInvoiceAsync(invoice);
        }
        
        public decimal getProductPrice(int intProductName) {
            return base.Channel.getProductPrice(intProductName);
        }
        
        public System.Threading.Tasks.Task<decimal> getProductPriceAsync(int intProductName) {
            return base.Channel.getProductPriceAsync(intProductName);
        }
        
        public string getProductUrl(int intProductName) {
            return base.Channel.getProductUrl(intProductName);
        }
        
        public System.Threading.Tasks.Task<string> getProductUrlAsync(int intProductName) {
            return base.Channel.getProductUrlAsync(intProductName);
        }
        
        public int getProductQuantinty(int intProductName) {
            return base.Channel.getProductQuantinty(intProductName);
        }
        
        public System.Threading.Tasks.Task<int> getProductQuantintyAsync(int intProductName) {
            return base.Channel.getProductQuantintyAsync(intProductName);
        }
        
        public string getProductDescription(int intProductName) {
            return base.Channel.getProductDescription(intProductName);
        }
        
        public System.Threading.Tasks.Task<string> getProductDescriptionAsync(int intProductName) {
            return base.Channel.getProductDescriptionAsync(intProductName);
        }
        
        public string getProductCategory(int intProductName) {
            return base.Channel.getProductCategory(intProductName);
        }
        
        public System.Threading.Tasks.Task<string> getProductCategoryAsync(int intProductName) {
            return base.Channel.getProductCategoryAsync(intProductName);
        }
        
        public decimal getPrice(int ID) {
            return base.Channel.getPrice(ID);
        }
        
        public System.Threading.Tasks.Task<decimal> getPriceAsync(int ID) {
            return base.Channel.getPriceAsync(ID);
        }
        
        public bool UserRegisterBackup(string fname, string lname, string iemail, string ipassword, string iphonenumber, int iusertype) {
            return base.Channel.UserRegisterBackup(fname, lname, iemail, ipassword, iphonenumber, iusertype);
        }
        
        public System.Threading.Tasks.Task<bool> UserRegisterBackupAsync(string fname, string lname, string iemail, string ipassword, string iphonenumber, int iusertype) {
            return base.Channel.UserRegisterBackupAsync(fname, lname, iemail, ipassword, iphonenumber, iusertype);
        }
    }
}
